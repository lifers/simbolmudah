namespace LibSimbolMudah
{
    struct SequenceDescription
    {
        String sequence;
        String result;
        String description;
    };

    runtimeclass SequenceDefinition
    {
        SequenceDefinition(String keysymdef, String composedef);

        IVectorView<SequenceDescription> PotentialPrefix(String sequence, UInt32 limit);
        IVectorView<SequenceDescription> Search(String sequence, UInt32 limit);
    }

    runtimeclass KeyboardTranslator
    {
        KeyboardTranslator(SequenceDefinition definition);

        void TranslateAndForward(UInt32 vkCode, UInt32 scanCode, Boolean hasCapsLock, Boolean hasShift, Boolean hasAltGr, UInt8 destination);
        void CheckLayoutAndUpdate();

        event Windows.Foundation.TypedEventHandler<KeyboardTranslator, String> OnTranslated;
        event Windows.Foundation.TypedEventHandler<KeyboardTranslator, String> OnInvalid;
        event Windows.Foundation.TypedEventHandler<KeyboardTranslator, String> OnKeyTranslated;
    }

    runtimeclass KeyboardHook
    {
        KeyboardHook(KeyboardTranslator translator);
        void ResetStage();

        event Windows.Foundation.TypedEventHandler<KeyboardHook, UInt8> OnStateChanged;
        event Windows.Foundation.TypedEventHandler<KeyboardHook, String> OnKeyEvent;
    }

    runtimeclass NotifyIcon
    {
        NotifyIcon(String iconPath, Boolean hookEnabled);

        void SubscribeStateChanged(KeyboardHook hook);
        void GetHookEnabled(Boolean enabled);

        event Windows.Foundation.TypedEventHandler<NotifyIcon, Boolean> OnOpenSettings;
        event Windows.Foundation.TypedEventHandler<NotifyIcon, Boolean> OnExitApp;
        event Windows.Foundation.TypedEventHandler<NotifyIcon, Boolean> OnSetHookEnabled;
    }
}
